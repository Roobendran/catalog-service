plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.5'
	id 'io.spring.dependency-management' version '1.1.7'
}

ext {
	springdocVersion = '2.1.0'
}

group = 'com.mms'
version = '0.0.1-SNAPSHOT'
description = 'Product and Category Management Service'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

// âœ… This ensures we build a JAR, not a WAR
bootJar {
	enabled = true
}

jar {
	enabled = false // Spring Boot handles packaging
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.flywaydb:flyway-mysql'
	implementation 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	implementation 'org.apache.poi:poi:5.2.3'
	implementation 'org.apache.poi:poi-ooxml:5.2.3'
	implementation 'commons-io:commons-io:2.11.0'

	implementation 'org.mapstruct:mapstruct:1.6.3'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3'

	runtimeOnly 'com.mysql:mysql-connector-j'

	implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${springdocVersion}"

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.jupiter', module: 'junit-jupiter'
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.testng:testng:7.10.2'
	testImplementation 'org.springframework:spring-test'
}

tasks.named('test') {
	useTestNG()

	testLogging {
		events "passed", "skipped", "failed"
	}
}